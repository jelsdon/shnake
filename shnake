#!/bin/bash


shopt -s checkwinsize     # Gather window size
tput cnorm                # Hide cursor
stty -echo                # Hide user input

WIDTH=160
HEIGHT=48
MARK='X'
WINDOW_HEIGHT=""
WINDOW_WIDTH=""
CURSOR_X=0
CURSOR_Y=0
DIRECTION=1   # 1=left 2=down 3=up 4=down

declare -A board_array
SNAKE_HEAD='0,0'
SNAKE_TAIL='0,0'
SNAKE_TAIL_PREV=''
SNAKE_LEN=1
SNAKE_BODY=''
EATEN_APPLE=0

function clearWindow() {
  tput sgr0    # Reset 'pen'
  tput clear
}

function getWindowWidth() {
  tput cols
}

function getWindowHeight() {
  tput lines
}

function setWindowSize() {
  WINDOW_WIDTH=$(getWindowWidth)
  WINDOW_HEIGHT=$(getWindowHeight)
}

function drawBoxCorner() {
  echo -n '+'
}

function drawBoxDash() {
  echo -n '-'
}

function drawBoxPipe() {
  echo -n '|'
}

function drawBoxBar() {
  local x_pos=0
  drawBoxCorner
  while [ $x_pos -lt $((WINDOW_WIDTH-2)) ]
  do
    drawBoxDash
    let x_pos=x_pos+1
  done	
  drawBoxCorner
}

function drawBoxSides() {
  local y_pos=1

  while [ $y_pos -lt $((WINDOW_HEIGHT-1)) ]
  do
    tput cup ${y_pos} 0
    drawBoxPipe
    tput cup ${y_pos} $WINDOW_WIDTH
    drawBoxPipe
    let y_pos=y_pos+1
  done
}

function drawGame() {
  setWindowSize
  # Determine game center
  CURSOR_X=$((WINDOW_WIDTH/2))
  CURSOR_Y=$((WINDOW_HEIGHT/2))
  SNAKE_HEAD="$CURSOR_X,$CURSOR_Y"
  SNAKE_TAIL="$CURSOR_X,$CURSOR_Y"
  clearWindow

  # Set border colour
  tput bold
  tput setaf 20
  tput setab 25

  # Move cursor to top left
  tput cup 0 0

  # Start drawing border
  drawBoxBar
  drawBoxSides
  drawBoxBar

  tput sgr0    # Reset 'pen'
  tput civis   # Hide cursor

  # Place cursor in middle of board
  tput cup ${CURSOR_Y} ${CURSOR_X}
  tput setab 255
  tput setaf 255
  echo -n ${MARK}
  tput cup ${CURSOR_Y} ${CURSOR_X}
}

# Convert cursor 
# X,Y to Y X
function cursor_to_tput () {
  local x
  local y

  x=`echo $1 | cut -d',' -f 1`
  y=`echo $1 | cut -d',' -f 2`

  echo $y $x

}

function drawApple() {

  tput sc                                # Save current position
  tput sgr0
  tput setaf 1
  tput cup 3 3
  echo -n 'A'
  tput sgr0
  tput rc                                # restore cursor
}

function draw() {
  local r_direction=''

  SNAKE_BODY="$CURSOR_X,$CURSOR_Y"

  drawApple

  while true
  do
    read -t1 -s -n 1 r_direction

    if [[ $r_direction != "" ]]
    then
      if [[ $r_direction = '1' || $r_direction = '2' || $r_direction = '9' || $r_direction = '0' ]]
      then
        DIRECTION=$r_direction
      fi
    fi

   # ...There's a case for the below to be a case

    # Move left
    if [ "${DIRECTION}" == '1' ]
    then
      if [ $CURSOR_X -gt 1 ]
      then
        let CURSOR_X=CURSOR_X-1
        tput cup ${CURSOR_Y} ${CURSOR_X}
        echo -n ${MARK}
        # Put cursor in new pos -- check if there's a 
        # replace mode for this
        tput cup ${CURSOR_Y} ${CURSOR_X}
      fi
    fi

    # Move right
    if [ "${DIRECTION}" == '2' ]
    then
      if [ $CURSOR_X -lt $((WINDOW_WIDTH-2)) ]
      then
        let CURSOR_X=CURSOR_X+1
        tput cup ${CURSOR_Y} ${CURSOR_X}
        echo -n ${MARK}
        # Put cursor in new pos -- check if there's a 
        # replace mode for this
        tput cup ${CURSOR_Y} ${CURSOR_X}
      fi
    fi

    # Move down
    if [ "${DIRECTION}" == '9' ]
    then
      if [ $CURSOR_Y -lt $((WINDOW_HEIGHT-2)) ]
      then
        let CURSOR_Y=CURSOR_Y+1
        tput cup ${CURSOR_Y} ${CURSOR_X}
        echo -n ${MARK}
        # Put cursor in new pos -- check if there's a 
        # replace mode for this
        tput cup ${CURSOR_Y} ${CURSOR_X}
      fi
    fi

    # Move up
    if [ "${DIRECTION}" == '0' ]
    then
      if [ $CURSOR_Y -gt 1 ]
      then
        let CURSOR_Y=CURSOR_Y-1
        tput cup ${CURSOR_Y} ${CURSOR_X}
        echo -n ${MARK}
        # Put cursor in new pos -- check if there's a 
        # replace mode for this
        tput cup ${CURSOR_Y} ${CURSOR_X}
      fi
    fi

    # Shake up
    if [ "${r_direction}" == "q" ]
    then
      tput sgr0    # Reset 'pen'
      clearWindow
      drawGame
    fi

  SNAKE_HEAD="$CURSOR_X,$CURSOR_Y"
  # If we land on an apple
  if [[ $CURSOR_X = '3' && $CURSOR_Y = '3' ]]
  then
    EATEN_APPLE=1
    let SNAKE_LEN=$SNAKE_LEN+1

    SNAKE_BODY="$SNAKE_BODY"

    # In this case we let the snake grow
  else
    if [ $EATEN_APPLE -eq 1 ]
    then
      EATEN_APPLE=0
    else
    # Move the snake
      SNAKE_TAIL=`echo $SNAKE_BODY | head -1`
      tput sc                                # Save current position
      tput cup `cursor_to_tput $SNAKE_TAIL`  # Move cursor onto tail for deletion
      tput sgr0                              # Delete the old tail
      tput ech 1
      tput rc                                # restore cursor
      tput setab 255
      tput setaf 255
    fi
  fi

  SNAKE_BODY=`echo -e "$SNAKE_BODY\n$SNAKE_HEAD"|tail -$SNAKE_LEN`

  done
}

function cleanup() {
  clearWindow
  tput reset
  stty echo
}

trap cleanup EXIT
trap drawGame SIGWINCH
drawGame
draw
